"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be: 1,2,3,5,8,13,21,34,55,89,... 
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

# find the largest term in the sequence which is < 4,000,000
def fibonacci():
    # generate fibonacci numbers below 4_000_000
    sequence = [1]
    previous_number = 1
    to_add = previous_number
    while max(sequence) < 4_000_000:
        new_number = previous_number + to_add
        if new_number % 2 == 0:
            sequence.append(new_number)
        to_add = previous_number
        previous_number = new_number
    
    # clear the first value from the sequence since its odd
    del sequence[0]

    # clear the last value from the sequence since its > 4_000_000
    del sequence[-1]
    
    return sum(sequence)

print(fibonacci())


